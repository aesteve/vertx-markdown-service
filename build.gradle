plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '1.2.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'http://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    // vertx
    compile 'io.vertx:vertx-core:3.0.0-SNAPSHOT'
	compile 'io.vertx:vertx-service-proxy:3.0.0-SNAPSHOT'
	compile 'io.vertx:vertx-codegen:3.0.0-SNAPSHOT'
	
	// Pegdown implementation
	compile 'org.pegdown:pegdown:1.5.0'
    
    // tests
    testCompile group: 'io.vertx', name: 'vertx-core', version: '3.0.0-SNAPSHOT', classifier: 'tests'
    testCompile 'junit:junit:4.12'
}

def generatedSrcPath="$buildDir/generated-src"
def generatedSrcDir = file(generatedSrcPath)

sourceSets {
	main {
		java.srcDirs += generatedSrcDir
		output.dir(builtBy: 'generateServiceProxy', generatedSrcPath)
	}
}

task generateServiceProxy(type: JavaCompile, description: 'Generates EBServiceProxies') {
	source = sourceSets.main.java
	classpath = configurations.compile
	destinationDir = generatedSrcDir
	options.compilerArgs = [
		"-proc:only",
		"-processor", "io.vertx.codegen.CodeGenProcessor",
		"-AoutputDirectory=$generatedSrcPath"
	]
}

compileJava.dependsOn generateServiceProxy

shadowJar {
    classifier = 'fatJar'
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Starter'
        attributes 'Main-Verticle': 'groovy:MarkdownServiceVerticle'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
    dependencies {
        exclude(dependency('io.vertx:codegen'))
        exclude(dependency('junit:junit'))
        exclude(dependency('org.mvel:mvel2'))
    }
}

clean {
	delete += generatedSrcDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
